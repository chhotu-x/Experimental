name: GitHub Copilot Coding Agent

on:
  # Triggered when Copilot Coding Agent creates a PR
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, develop, master]
  
  # Allow manual triggering for testing and development
  workflow_dispatch:
    inputs:
      task_description:
        description: 'Description of the coding task'
        required: false
        default: 'General coding task optimization'
      performance_mode:
        description: 'Performance optimization mode'
        required: false
        default: 'standard'
        type: choice
        options:
          - standard
          - optimized

# Enhanced permissions for comprehensive agent operations
permissions:
  contents: write
  pull-requests: write
  actions: read
  checks: write
  security-events: write
  issues: read

env:
  # Global environment optimizations
  NODE_ENV: development
  CI: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Performance optimizations
  NODE_OPTIONS: "--max-old-space-size=4096"
  NPM_CONFIG_MAXSOCKETS: "20"
  NPM_CONFIG_NETWORK_CONCURRENCY: "8"
  NPM_CONFIG_CACHE: "/tmp/.npm"
  # Parallel processing configuration
  JEST_WORKERS: "50%"

jobs:
  # Main Copilot Coding Agent job
  copilot-agent-main:
    name: Copilot Agent - Main Environment
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: Checkout repository with full history
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: System Resources Analysis
      run: |
        echo "=== System Resources Analysis ==="
        echo "CPU Cores: $(nproc)"
        echo "Memory: $(free -h)"
        echo "Disk Space: $(df -h /)"
        echo "================================="

    - name: Setup Node.js with Performance Optimization
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'

    - name: Configure Git for Copilot Agent
      run: |
        git config --global user.name "GitHub Copilot Coding Agent"
        git config --global user.email "copilot-agent@github.com"
        git config --global init.defaultBranch main

    - name: Cache Dependencies and Build Artifacts
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
          node_modules
          .cache
          dist
          build
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-
          ${{ runner.os }}-node-

    - name: Install Dependencies
      run: |
        echo "Installing dependencies..."
        npm ci --prefer-offline --no-audit --no-fund
        npm list --depth=0 || echo "Dependency verification completed"

    - name: Environment Health Check
      run: |
        echo "=== Environment Health Check ==="
        node --version
        npm --version
        echo "NODE_OPTIONS: $NODE_OPTIONS"
        
        # Quick application startup test
        timeout 10s npm start &
        sleep 5
        curl -f http://localhost:3000 || echo "App health check completed"
        pkill -f "node server.js" || true

    - name: Code Quality Analysis
      run: |
        echo "Running code quality analysis..."
        
        # Run linting (if available)
        if npm run lint --silent 2>/dev/null; then
          echo "Linting completed successfully"
        else
          echo "Linting not configured or completed with warnings"
        fi
        
        # Security audit with npm
        npm audit --audit-level high || echo "Security audit completed"

    - name: Performance Testing
      run: |
        echo "Running performance tests..."
        
        # Memory usage test
        node -e "
          console.log('Heap Used:', Math.round(process.memoryUsage().heapUsed / 1024 / 1024) + ' MB');
          console.log('Heap Total:', Math.round(process.memoryUsage().heapTotal / 1024 / 1024) + ' MB');
        "

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: copilot-agent-artifacts-${{ github.run_number }}
        path: |
          logs/
          coverage/
          test-results/
        retention-days: 7

    - name: Resource Usage Summary
      if: always()
      run: |
        echo "=== Final Resource Usage Summary ==="
        echo "Memory Usage:"
        free -h
        echo "Disk Usage:"
        df -h
        echo "================================="

  # Security and compliance job
  security-compliance:
    name: Security & Compliance Scanning
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --prefer-offline

    - name: Run Security Audit
      run: |
        echo "Running comprehensive security audit..."
        npm audit --audit-level high --json > security-audit.json || true
        if [ -s security-audit.json ]; then
          echo "Security audit results:"
          cat security-audit.json
        else
          echo "No security vulnerabilities found"
        fi

    - name: Initialize CodeQL
      if: github.event_name == 'pull_request'
      uses: github/codeql-action/init@v2
      with:
        languages: javascript

    - name: Perform CodeQL Analysis
      if: github.event_name == 'pull_request'
      uses: github/codeql-action/analyze@v2

    - name: Upload Security Reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          security-audit.json
          sarif-results/